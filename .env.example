# ThreatFlow Environment Configuration
# Copy this file to .env and configure your settings

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================

# Claude (Anthropic) Configuration
# Your Anthropic API key for Claude AI analysis
# Get this from: https://console.anthropic.com/account/keys
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Claude model to use (default: claude-sonnet-4-20250514)
CLAUDE_MODEL=claude-sonnet-4-20250514

# Ollama Configuration (for local AI)
# Base URL for your Ollama instance (default: http://localhost:11434)
OLLAMA_BASE_URL=http://localhost:11434

# Ollama model to use (default: llama3.2-vision:latest)
# Make sure to pull the model first: ollama pull llama3.2-vision:latest
OLLAMA_MODEL=llama3.2-vision:latest

# OpenAI Configuration (for GPT models)
# Your OpenAI API key for GPT models
# Get this from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# OpenAI model to use (default: gpt-4o)
OPENAI_MODEL=gpt-4o

# OpenRouter Configuration (for multiple model access)
# Your OpenRouter API key for multi-model access
# Get this from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# OpenRouter model to use (default: anthropic/claude-3.5-sonnet)
OPENROUTER_MODEL=anthropic/claude-3.5-sonnet

# =============================================================================
# ENTERPRISE: DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Connection
# Database URL format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://threatflow_user:your_secure_password@localhost:5432/threatflow_db

# Database connection pool settings
DB_POOL_MIN=5                      # Minimum connections in pool (default: 5)
DB_POOL_MAX=20                     # Maximum connections in pool (default: 20)
DB_CONNECTION_TIMEOUT=30000        # Connection timeout in ms (default: 30000)
DB_IDLE_TIMEOUT=10000              # Idle timeout in ms (default: 10000)

# =============================================================================
# ENTERPRISE: AUTHENTICATION CONFIGURATION
# =============================================================================

# JWT Configuration
JWT_SECRET=your_super_secure_jwt_secret_key_here_change_this_in_production
JWT_EXPIRES_IN=15m                 # Access token expiry (default: 15m)
JWT_REFRESH_EXPIRES_IN=7d          # Refresh token expiry (default: 7d)

# Password hashing configuration
BCRYPT_ROUNDS=12                   # BCrypt rounds for password hashing (default: 12)

# Session configuration
SESSION_SECRET=your_super_secure_session_secret_change_this_in_production

# =============================================================================
# ENTERPRISE: SIEM INTEGRATION CONFIGURATION
# =============================================================================

# Splunk Configuration (example SIEM)
SPLUNK_HOST=your-splunk-instance.com
SPLUNK_PORT=8089
SPLUNK_USERNAME=your_splunk_user
SPLUNK_PASSWORD=your_splunk_password
SPLUNK_INDEX=main

# Additional SIEM configurations can be added here
# QRadar, Sentinel, etc.

# =============================================================================
# ENTERPRISE: PICUS SECURITY INTEGRATION
# =============================================================================

# Picus Security API Configuration
# Your Picus Security platform base URL (use official API URL)
# Example: https://api.picussecurity.com
PICUS_BASE_URL=https://api.picussecurity.com

# Picus Security API refresh token (REQUIRED for new installations)
# Get this from your Picus Security platform admin console > API Settings
PICUS_REFRESH_TOKEN=your_picus_refresh_token_here

# Legacy API token (deprecated, use refresh token above)
PICUS_API_TOKEN=your_picus_security_api_token_here

# OAuth 2.0 client credentials (alternative to token auth)
# Use either token OR OAuth credentials, not both
PICUS_CLIENT_ID=your_picus_client_id
PICUS_CLIENT_SECRET=your_picus_client_secret

# Picus integration settings
PICUS_SIMULATION_MODE=safe              # Simulation mode: safe | live (default: safe)
PICUS_AUTO_CREATE_ACTIONS=true          # Automatically create Picus actions from IOCs (default: true)
PICUS_AUTO_SCHEDULE_VALIDATION=false    # Auto-schedule threat validation (default: false)
PICUS_NOTIFICATION_RECIPIENTS=security@yourcompany.com  # Comma-separated email list

# Rate limiting for Picus API (requests per minute)
PICUS_RATE_LIMIT=60                     # API requests per minute (default: 60)
PICUS_BURST_LIMIT=10                    # Burst requests limit (default: 10)

# =============================================================================
# OPTIONAL: SERVER CONFIGURATION
# =============================================================================

# Server port (default: 3001)
PORT=3001

# Node environment: development | production (default: development)
NODE_ENV=development

# =============================================================================
# OPTIONAL: SECURITY CONFIGURATION
# =============================================================================

# Rate limiting (requests per time window)
RATE_LIMIT_ARTICLES=10        # Max article fetches per 15 minutes (default: 10)
RATE_LIMIT_IMAGES=50          # Max image fetches per 10 minutes (default: 50)
RATE_LIMIT_STREAMING=5        # Max AI streaming requests per 5 minutes (default: 5)

# Request size limits (in bytes for numeric values, or Express format like '10mb')
MAX_REQUEST_SIZE=10mb         # Max request body size (default: 10mb)
MAX_ARTICLE_SIZE=5242880      # Max article size in bytes (default: 5MB = 5242880)
MAX_IMAGE_SIZE=3145728        # Max image size in bytes (default: 3MB = 3145728)

# =============================================================================
# OPTIONAL: CORS CONFIGURATION
# =============================================================================

# Allowed origins for CORS (comma-separated)
# Default: http://localhost:5173,http://localhost:3000,http://127.0.0.1:5173,http://127.0.0.1:3000
# Production example: https://yourdomain.com,https://www.yourdomain.com
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file: cp .env.example .env

# 2. DATABASE SETUP (Required for Enterprise Features):
#    - Install PostgreSQL: https://www.postgresql.org/download/
#    - Create database and user:
#      sudo -u postgres psql
#      CREATE USER threatflow_user WITH PASSWORD 'your_secure_password';
#      CREATE DATABASE threatflow_db OWNER threatflow_user;
#      GRANT ALL PRIVILEGES ON DATABASE threatflow_db TO threatflow_user;
#    - Update DATABASE_URL with your credentials
#    - The schema will be created automatically on first run

# 3. AUTHENTICATION SETUP:
#    - Generate secure secrets for JWT_SECRET and SESSION_SECRET
#    - Use: openssl rand -hex 32
#    - Update JWT_SECRET and SESSION_SECRET in .env

# 4. Choose your AI provider(s):
#    - For Claude (Anthropic): Add your Anthropic API key
#    - For Ollama (local): Install Ollama and pull a vision model (e.g., ollama pull llama3.2-vision:latest)
#    - For OpenAI: Add your OpenAI API key
#    - For OpenRouter: Add your OpenRouter API key for multi-model access
#    - Configure multiple providers for maximum flexibility

# 5. PICUS SECURITY INTEGRATION (Optional):
#    - Configure your Picus Security API credentials
#    - Set PICUS_BASE_URL to your Picus Security platform URL
#    - Provide either PICUS_API_TOKEN or OAuth credentials (CLIENT_ID + CLIENT_SECRET)
#    - Leave blank to disable Picus integration

# 6. SIEM INTEGRATION (Optional):
#    - Configure your SIEM credentials (Splunk, QRadar, etc.)
#    - Leave blank to use demo mode

# 7. Adjust other settings as needed (all optional with sensible defaults)

# 8. Start the server: npm run dev:full

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env to version control (it's in .gitignore)
# - Keep API keys secure and rotate them regularly
# - All API calls happen server-side for maximum security
# - Adjust rate limits based on your usage patterns
# - In production, set NODE_ENV=production and update ALLOWED_ORIGINS